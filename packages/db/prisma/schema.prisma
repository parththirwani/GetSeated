generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id    @default(uuid())
  phoneNumber   String       @unique
  name          String
  verified      Boolean
  bookings      Booking[]
  payments      Payment[]
}

model Admin {
  id            String       @id    @default(uuid())
  phoneNumber   String       @unique
  name          String
  verified      Boolean     @default(false)
  events        Event[]
}

model Event {
  id            String       @id    @default(uuid())
  name          String
  description   String
  banner        String
  adminId       String
  admin         Admin        @relation(fields: [adminId],references: [id])
  bookings      Booking[]  
  payments      Payment[]
}


model Booking {
  id            String       @id    @default(uuid())
  eventId       String  
  userId        String
  status        PaymentStatus
  user          User         @relation(fields: [userId], references: [id])
  event         Event        @relation(fields: [eventId], references: [id])
  seats         Seat[]
}

model Seat{
  id            String       @id    @default(uuid())
  seatTypeId    String
  bookingId     String
  qr            String
  seatTypes     SeatType     @relation(fields: [seatTypeId], references: [id])
  bookings      Booking      @relation(fields: [bookingId], references: [id])
}


model SeatType {
  id            String       @id    @default(uuid())
  name          String
  description   String
  price         Int
  eventId       String
  bookingId     String
  seats         Seat[]
}

model Payment {
  id            String       @id    @default(uuid())
  eventId       String  
  userId        String
  status        PaymentStatus
  user          User         @relation(fields: [userId], references: [id])
  event         Event        @relation(fields: [eventId], references: [id])
}

enum PaymentStatus {
  Pending
  Success
  Fail
}